name: C/C++ CI

on:
  schedule:
    - cron: "0 22 3 * 5"  # run test once a month
  push:
    branches: [master]
    paths:
      - configure.ac
      - 'src/**'
      - 'include/**'
      - '.github/workflows/*'

  pull_request:
    branches: [master]

env:
  ACTIONS_STEP_DEBUG: true

jobs:
  notification:
    runs-on: ubuntu-latest
    name: Notifications
    outputs:
      branch: ${{ steps.extract_branch.outputs.branch }}
    steps:
      - name: Extract Branch name
        id: extract_branch
        shell: bash
        run: echo "branch=$(echo ${GITHUB_REF#refs/heads/})" >> $GITHUB_OUTPUT
      - name: IRC notification
        uses: Gottox/irc-message-action@v2
        with:
          server: irc.uvt.nl
          channel: '#gitlama'
          nickname: GitHub
          message: >
            ${{ github.actor }} started a build of unicodetest
            [${{ steps.extract_branch.outputs.branch }}]

  build:
    runs-on: ${{ matrix.os }}
    needs: notification
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        compiler: [g++-12, clang++]

    steps:
      - name: exclude Mac-OS with g++
        shell: bash
        if: ${{ matrix.os == 'macos-latest' && matrix.compiler == 'g++-12' }}
        run: echo "action_status='skip'" >> $GITHUB_ENV

      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.12.1
        with:
          access_token: ${{ github.token }}

      - uses: actions/checkout@v4.1.1

      - name: Install Build Environment
        run: |
             if [ "$RUNNER_OS" == "Linux" ]; then
                sudo apt-get install pkgconf autoconf-archive
             else
                brew upgrade
                brew install libtool
                brew install autoconf
                brew install autoconf-archive
                brew install automake
             fi

      - name: Install Dependencies
        run: |
             if [ "$RUNNER_OS" == "Linux" ]; then
                sudo apt-get install libicu-dev libxml2-dev libbz2-dev;
                sudo apt-get install zlib1g-dev
             else
                brew install libxml2
                brew reinstall icu4c
                brew install bzip2
                brew install zlib
             fi
      - name: build
        id: build
        uses: LanguageMachines/ticcactions/safe_build@v1
        with:
          compiler: ${{ matrix.compiler }}

      - name: show status
        shell: bash
        run: |
          echo matrix.os=${{ matrix.os }}
          echo matrix.compiler=${{ matrix.compiler }}
          echo ACTION_STATUS=${{ env.action_status }}

      - id: compiler
        run: |
          cid=$(echo ${{matrix.compiler}} | cut -d\+ -f1)
          echo "cid=$cid" >> $GITHUB_ENV
      - name: Notify IRC of results
        uses: LanguageMachines/ticcactions/irc_status@v1
        with:
          os: ${{ matrix.os }}
          module: actiontests
          branch: ${{ needs.notification.outputs.branch }}
          compiler: ${{ matrix.compiler }}
          nickname: GH-${{ runner.os }}-${{ env.cid }}
          status: ${{ env.action_status }}
